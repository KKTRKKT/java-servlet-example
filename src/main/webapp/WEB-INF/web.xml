<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

  <!-- context-param은 filter보다 위에 설정해야된다 -->
  <context-param>
    <param-name>contextClass</param-name>
    <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
  </context-param>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>me.kktrkkt.servlet_demo.dispatcher_servlet.AppConfig</param-value>
  </context-param>

  <!-- ServletContext에 Application Context를 로드한다.  -->
  <!-- WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE 이름으로 Application Context를 꺼낼수 있다 -->
  <!-- 리스너를 등록하지 않으면 DispatcherServlet의 ApplicationContext가 Root ApplicationContext가 된다  -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!-- ApplicationContext 설정을 하지 않으면 리스너의 ApplicationContext가 들어오게된다 -->
  <servlet>
    <servlet-name>dispatcher-servlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextClass</param-name>
      <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </init-param>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>me.kktrkkt.servlet_demo.dispatcher_servlet.WebConfig</param-value>
    </init-param>
  </servlet>

  <!--dispatcherServlet FrontController 패턴을 통해 각 요청을 적절한 컨트롤러에 분배해주는 역할을 한다 -->
  <!-- WebApplicationContext 구조를 상속받는 별개의 ApplicationContext를 가지고 있다 -->
  <!-- (만약 다른 dispatcherServlet이 하나 더 등록될 경우 dispatcherServlet간에 데이터를 공유하기 위해서) -->
  <servlet-mapping>
    <servlet-name>dispatcher-servlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

</web-app>
